stages:
- compile
- test
- build
- package

compile:extension:
  stage: compile
  image: node:10
  script:
  - cd extension
  - npm install
  - npm run-script build

test:daemon:
  stage: test
  image: golang:1.11
  script:
  - cd daemon
  - go test -cover -v ./...

test:extension:
  stage: test
  image: node:10
  script:
  - cd extension
  - npm install
  - npm run-script test

build:daemon:linux:
  stage: build
  image: golang:1.11
  script:
  - cd daemon
  - GOOS=linux GOARCH=amd64 go build -v ./...
  artifacts:
    paths:
    - /builds/phil9909/gitlab-local-connector/daemon/gitlab-local-connector

#build:daemon:mac:
#  stage: build
#  image: golang:1.11
#  script:
#  - cd daemon
#  - GOOS=darwin GOARCH=amd64 go build -v ./...
#  artifacts:
#    paths:
#    - /builds/phil9909/gitlab-local-connector/daemon/gitlab-local-connector

build:daemon:windows:
  stage: build
  image: golang:1.11
  script:
  - cd daemon
  - GOOS=windows GOARCH=amd64 go build -v ./...
  artifacts:
    paths:
    - /builds/phil9909/gitlab-local-connector/daemon/gitlab-local-connector.exe

build:extension:
  stage: build
  image: node:10
  script:
  - cd extension
  - 'sed -ri "s=\"version\": \"([^\"]*)=\"version\": \"\\1.$(git log --oneline | wc -l)=" manifest.json' # set the version number from x.x.x to x.x.x.buildnum
  - npm install
  - npm run-script build
  - npm run-script pack
  artifacts:
    paths:
    - extension/extension.zip


package:linux:
  stage: package
  image:
    name: phil9909/fpm
    entrypoint: [""]
  dependencies:
  - build:daemon:linux
  script:
  - cd daemon
  - mkdir bin
  - mv gitlab-local-connector ./bin/
  - fpm -t deb -n test -s dir ./bin=/usr/bin
  artifacts:
    paths:
      - 'daemon/*.deb'